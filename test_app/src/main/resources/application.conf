akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"

    serialization-bindings {
      "io.scalac.serialization.SerializableMessage" = jackson-cbor
    }

    typed.extensions = ["io.scalac.extension.AkkaMonitoring"]
  }

  coordinated-shutdown.exit-jvm = on

  persistence {
    journal {
      plugin = "akka.persistence.journal.inmem"
      auto-start-journals = ["akka.persistence.journal.inmem"]
    }

    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
    }
  }


  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka://Accounts@127.0.0.1:2551",
      "akka://Accounts@127.0.0.1:2552"
    ]
    sharding {
      number-of-shards = 20
    }
  }

  management {
    http {
      route-providers-read-only = false
    }
  }
}

app {
  port = 8080
  port = ${?APP_PORT}
  host = "127.0.0.1"
  host = ${?APP_HOST}
  systemName = accounts
}

newrelic {
  api_key = ""
  api_key = ${?API_KEY}
  account_id = "2908957"
  account_id = ${?ACCOUNT_ID}
}

db {
  db_name = "akka"
  db_name = ${?DB_NAME}
  host = "localhost"
  host = ${?DB_HOST}
  port = 5432
  port = ${?DB_PORT}
  user = "postgres"
  user = ${?DB_USER}
  password = "12345"
  password = ${?DB_PASS}
  url = "jdbc:postgresql://"${db.host}":"${db.port}"/"${db.db_name}
  driver = "org.postgresql.Driver"
  connectionPool = "HikariCP"
  numThreads = 10
  queueSize = 1000
  idleTimeout = 10m
  maxLifetime = 30m
  minConnections = 2
  maxConnections = 10
}

akka-persistence-jdbc {
  shared-databases {
    slick {
      profile = "slick.jdbc.PostgresProfile$"
      db = ${db}
    }
  }
}

jdbc-journal {
  use-shared-db = "slick"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "slick"
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  use-shared-db = "slick"
}
