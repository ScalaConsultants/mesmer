akka {
  actor {
    serialization-bindings {
      "io.scalac.extension.SerializableMessage" = jackson-cbor
    }
  }
}

io {
  scalac {
    akka-monitoring {

      #openTelemetry backend config
      backend {
        #name of backend
        name = "newrelic"
        #api-key needed to push data
        api-key = ${?API_KEY}
        #backend region to push to, currently support [us|eu]
        region = "eu",
        #name of the application that should appear in backend system
        service-name = "test_app"
      }
      #flag if extension should initialize backend on startup
      boot.backend = true

      #flags which module monitoring should be automatically started on extension initilization
      auto-start {
        akka-actor = true
        akka-http = true
        akka-persistence = true
        akka-cluster = true
      }

      #flush configs
      cleaning {
        max-staleness = 20 seconds
        every = 5 seconds
      }

      timeouts {
        query-region-stats = 2s
        stream-metric-collection = 2s
      }

      caching {
        stream {
          max-entries = 100
        }
        http {
          max-entries = 10
        }
        persistence {
          max-entries = 10
        }
      }

      #names of all metrics gathered by the extension
      metrics {
        actor-metrics {
          mailbox-size = "mailbox_size"
        }
        cluster-metrics {
          shards-per-region = "shards_per_region"
          entities-per-region = "entities_per_region"
          reachable-nodes = "reachable_nodes"
          unreachable-nodes = "unreachable_nodes"
          shard-regions-on-node = "shard_regions_on_node"
          entities-on-node = "entities_on_node"
          node-down = "node_down_total"
        }
        http-metrics {
          request-duration = "request_duration"
          request-total = "request_total"
        }
        persistence-metrics {
          recovery-time = "recovery_time"
        }
      }

    }
  }
}