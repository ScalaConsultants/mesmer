name: Scala CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
    - published

jobs:
  lint:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: zulu
    - name: Check code linting
      run: sbt "clean;check"

  build:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: zulu
    - name: Run tests
      run: sbt "clean;testAll"

  run-examples:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        example: [exampleAkka, exampleAkkaStream, exampleZio]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: zulu
      - name: Run tests
        run: echo -ne '\n' | sbt "clean;${{ matrix.example }}/run"

  publish:

    runs-on: ubuntu-latest

    needs: [lint, build, run-examples]
    if: github.event_name != 'pull_request'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: olafurpg/setup-scala@v11
      with:
        java-version: zulu@1.11
    - run: sbt ci-release
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
